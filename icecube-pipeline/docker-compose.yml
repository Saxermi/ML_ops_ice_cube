version: "3.8"

services:
  cube:
    build: ./emitter
    container_name: cube
    ports:
      - "8000:8000"         # Expose metrics endpoint for Prometheus
    volumes:
      - ./input:/app/input
      - ./archive:/app/archive
    networks:
      - monitor-net
    depends_on:
      - redis
      - mongo

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitor-net

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitor-net

  model-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: model-server
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
    networks:
      - monitor-net
    depends_on:
      - redis

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consumer
    command: python consumer.py
    environment:
      - REDIS_URL=redis://redis:6379/0
      - MODEL_SERVER_URL=http://model-server:5000/predict
      - EVENT_QUEUE=events
      - POLL_INTERVAL=0.5
    networks:
      - monitor-net
    depends_on:
      - redis
      - model-server

networks:
  monitor-net:
    driver: bridge
